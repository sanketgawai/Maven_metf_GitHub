<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="sanket" failures="0" tests="6" name="OperaTest" time="0.08" errors="0" timestamp="2023-02-15T15:02:12 IST">
  <testcase classname="testNgPack.TestClassABC" name="@BeforeTest openBrowser" time="0.063">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="session not created: No matching capabilities found
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;SANKET&amp;apos;, ip: &amp;apos;192.168.1.34&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.4.1&amp;apos;
Driver info: driver.version: OperaDriver
remote stacktrace: Backtrace:
	(No symbol) [0x0073F243]
	(No symbol) [0x006C7FD1]
	(No symbol) [0x005BD04D]
	(No symbol) [0x0060E35D]
	(No symbol) [0x0060DA8C]
	(No symbol) [0x0060ECEE]
	(No symbol) [0x0060EB2A]
	(No symbol) [0x00608386]
	(No symbol) [0x005E163C]
	(No symbol) [0x005E269D]
	GetHandleVerifier [0x009D9A22+2655074]
	GetHandleVerifier [0x009CCA24+2601828]
	GetHandleVerifier [0x007E8C0A+619850]
	GetHandleVerifier [0x007E7830+614768]
	(No symbol) [0x006D05FC]
	(No symbol) [0x006D5968]
	(No symbol) [0x006D5A55]
	(No symbol) [0x006E051B]
	BaseThreadInitThunk [0x769CFA29+25]
	RtlGetAppContainerNamedObjectPath [0x772E7BBE+286]
	RtlGetAppContainerNamedObjectPath [0x772E7B8E+238]
">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created: No matching capabilities found
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SANKET', ip: '192.168.1.34', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: driver.version: OperaDriver
remote stacktrace: Backtrace:
(No symbol) [0x0073F243]
(No symbol) [0x006C7FD1]
(No symbol) [0x005BD04D]
(No symbol) [0x0060E35D]
(No symbol) [0x0060DA8C]
(No symbol) [0x0060ECEE]
(No symbol) [0x0060EB2A]
(No symbol) [0x00608386]
(No symbol) [0x005E163C]
(No symbol) [0x005E269D]
GetHandleVerifier [0x009D9A22+2655074]
GetHandleVerifier [0x009CCA24+2601828]
GetHandleVerifier [0x007E8C0A+619850]
GetHandleVerifier [0x007E7830+614768]
(No symbol) [0x006D05FC]
(No symbol) [0x006D5968]
(No symbol) [0x006D5A55]
(No symbol) [0x006E051B]
BaseThreadInitThunk [0x769CFA29+25]
RtlGetAppContainerNamedObjectPath [0x772E7BBE+286]
RtlGetAppContainerNamedObjectPath [0x772E7B8E+238]

at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:1002)
at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)
at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.opera.OperaDriver.<init>(OperaDriver.java:173)
at org.openqa.selenium.opera.OperaDriver.<init>(OperaDriver.java:160)
at org.openqa.selenium.opera.OperaDriver.<init>(OperaDriver.java:115)
at testNgPack.TestClassABC.openBrowser(TestClassABC.java:47)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest openBrowser -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@BeforeTest openBrowser" time="-1.676453532926E9">
    <skipped/>
  </testcase> <!-- @BeforeTest openBrowser -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@BeforeClass creatPomObjects" time="-1.676453532927E9">
    <skipped/>
  </testcase> <!-- @BeforeClass creatPomObjects -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@BeforeMethod beforeMehtod" time="-1.676453532928E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMehtod -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@AfterMethod afterMethod" time="-1.676453532929E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@BeforeMethod beforeMehtod" time="-1.67645353293E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMehtod -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@AfterMethod afterMethod" time="-1.676453532931E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@BeforeMethod beforeMehtod" time="-1.676453532932E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMehtod -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@AfterMethod afterMethod" time="-1.676453532933E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@AfterClass clearPomObjects" time="-1.676453532934E9">
    <skipped/>
  </testcase> <!-- @AfterClass clearPomObjects -->
  <testcase classname="testNgPack.TestClassABC" name="@BeforeClass creatPomObjects" time="-1.676453532934E9">
    <skipped/>
  </testcase> <!-- @BeforeClass creatPomObjects -->
  <testcase classname="testNgPack.TestClassABC" name="@BeforeMethod beforeMehtod" time="-1.676453532935E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMehtod -->
  <testcase classname="testNgPack.TestClassABC" name="@AfterMethod afterMethod" time="-1.676453532936E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestClassABC" name="@BeforeMethod beforeMehtod" time="-1.676453532936E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMehtod -->
  <testcase classname="testNgPack.TestClassABC" name="@AfterMethod afterMethod" time="-1.676453532938E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestClassABC" name="@BeforeMethod beforeMehtod" time="-1.676453532938E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMehtod -->
  <testcase classname="testNgPack.TestClassABC" name="@AfterMethod afterMethod" time="-1.67645353294E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestClassABC" name="@AfterClass clearPomObjects" time="-1.67645353294E9">
    <skipped/>
  </testcase> <!-- @AfterClass clearPomObjects -->
  <testcase classname="testNgPack.TestClassABC" name="@AfterTest afterTest" time="-1.67645353294E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="@AfterTest afterTest" time="-1.676453532941E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="verifyCookiesLink123" time="0.0">
    <skipped/>
  </testcase> <!-- verifyCookiesLink123 -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="verifyPrivacyLink123" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPrivacyLink123 -->
  <testcase classname="testNgPack.TestClassXYZ$TestClassABC" name="verifyTermLink123" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTermLink123 -->
  <testcase classname="testNgPack.TestClassABC" name="verifyCookiesLink" time="0.0">
    <skipped/>
  </testcase> <!-- verifyCookiesLink -->
  <testcase classname="testNgPack.TestClassABC" name="verifyPrivacyLink" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPrivacyLink -->
  <testcase classname="testNgPack.TestClassABC" name="verifyTermLink" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTermLink -->
</testsuite> <!-- OperaTest -->
